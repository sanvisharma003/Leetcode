Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.

Example 1:
Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water are being trapped.

CODE:

class Solution 
{
    public int trap(int[] arr) 
    {
      int []lmax=new int[arr.length];
      lmax[0]=arr[0];
      for(int i=1;i<arr.length;i++)
        lmax[i]=Math.max(lmax[i-1],arr[i]);

      int []rmax=new int[arr.length];
      rmax[arr.length-1]=arr[arr.length-1];
      for(int i=arr.length-2;i>=0;i--)
        rmax[i]=Math.max(rmax[i+1],arr[i]);

      int ans=0;
      for(int i=1;i<arr.length-1;i++)
        ans+=Math.min(lmax[i],rmax[i])-arr[i];
   
      return ans;
    }
}
