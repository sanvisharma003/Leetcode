Given a string s, return the longest palindromic substring in s.

Example 1:
Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.

CODE 1:

class Solution 
{
    public String longestPalindrome(String s) 
    {
        if(s.length()==1)
            return s;
        
        if(s.length()==2)
        {
            if(s.charAt(0)==s.charAt(1))
                return s;
            else
                return s.charAt(0)+"";
        }
        
        StringBuffer ans= new StringBuffer();
        for(int i=1; i<s.length(); i++)
        {
            int l=i, h=i;

            while(s.charAt(l)==s.charAt(h))
            {
                l--;
                h++;
                if(l<0 || h==s.length())
                    break;
            }
            String temp1=s.substring(l+1, h);

            l=i-1;
            h=i;
            while(s.charAt(l)==s.charAt(h))
            {
                l--;
                h++;
                if(l<0 || h==s.length())
                    break;
            }

            String temp2=s.substring(l+1, h);
            if(temp1.length()>ans.length() || temp2.length()>ans.length())
                ans= temp1.length()>temp2.length() ? new StringBuffer(temp1) :new StringBuffer(temp2);
        }
        return ans.toString();
    }
}

CODE 2:

class Solution 
{
    public String longestPalindrome(String s) 
    {
        int n=s.length();
        String ans="";

        //for odd size substrings
        for(int i=1; i<n-1; i++)
        {
            int k=i+1, l=i-1, temp=1;
            while(k<n && l>=0 && s.charAt(k)== s.charAt(l))
            {
                k++;
                l--;
                temp+=2;
            }
            if(ans.length()<temp)
                ans=s.substring(i-(temp/2), i-(temp/2)+temp);
        }
        
        //for even substrings
        for(int i=1; i<=n-1; i++)
        {
            int k=i-1, l=i, temp=0;
            while(k>=0 && l<n && s.charAt(k)== s.charAt(l))
            {
                k--;
                l++;
                temp+=2;
            }
            if(ans.length()<temp)
                ans=s.substring(i-(temp/2), i-(temp/2)+temp);
        }

        if(ans.equals(""))
            ans=s.charAt(0)+"";

        return ans;
    }
}
