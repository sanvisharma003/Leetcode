Given a sorted array arr containing n elements with possibly some duplicate, the task is to find the first and last occurrences of an element x in the given array.
Note: If the number x is not found in the array then return both the indices as -1.

Example 1:
Input: n=9, x=5
arr[] = { 1, 3, 5, 5, 5, 5, 67, 123, 125 }
Output:  2 5
Explanation: First occurrence of 5 is at index 2 and last occurrence of 5 is at index 5. 

CODE:

class GFG
{
    ArrayList<Integer> find(int arr[], int n, int x)
    {
        // code here
        ArrayList<Integer>al=new ArrayList<>();
        for(int i=0; i<n ; i++)
        {
            if(arr[i]==x)
            {
                int j=i;
                al.add(i);
                while(j<arr.length-1 && arr[j]==arr[j+1])
                    j++;
                al.add(j);
                break;
            }
        }
        if(al.size()==0)
        {
            al.add(-1);
            al.add(-1);
        }
        return al;
    }
}
