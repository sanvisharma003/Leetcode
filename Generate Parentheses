Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

Example 1:
Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]

CODE:

class Solution 
{
    public List<String> generateParenthesis(int n) 
    {
      List<String> res=new ArrayList<>();

      find("(", 1, 0, res, n);
      return res;
    }

    public void find(String med, int op, int cl, List<String> res, int n)
    {
      if(med.length()==n*2)
      {
        res.add(med);
        return;
      }

      if(op<n)
        find(med+'(', op+1, cl,res,n);

      if(cl<op)
      find(med+')', op, cl+1,res,n);
    }
}
