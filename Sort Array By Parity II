Given an array of integers nums, half of the integers in nums are odd, and the other half are even. Sort the array so that whenever nums[i] is odd, i is odd, and whenever nums[i] is even, i is even. Return any answer array that satisfies this condition.

Example 1:
Input: nums = [4,2,5,7]
Output: [4,5,2,7]
Explanation: [4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.

CODE:

class Solution {
    public int[] sortArrayByParityII(int[] nums) 
    {
      Stack<Integer>even=new Stack<>();
      Stack<Integer>odd=new Stack<>();

      for(int i=0;i<nums.length;i++)
      {
        if(nums[i]%2==0)
          even.push(nums[i]);
        else
          odd.push(nums[i]);
      }
   
      for(int i=nums.length-1;i>=0;i--)
      {
        if(i%2!=0 && !odd.isEmpty())
          nums[i]=odd.pop();
        else
          nums[i]=even.pop();  
      }
      
      return nums;
    }
}
