Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

Example 1:
Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

CODE:

class Solution 
{
    public List<List<Integer>> permute(int[] nums) 
    {
      List<Integer>asf=new ArrayList<>();
      List<List<Integer>>ans=new ArrayList<>();

      print(ans, asf, nums);

      return ans;
    }

    public void print(List<List<Integer>> ans, List<Integer> asf, int[] nums)
    {
      if(asf.size()==nums.length)
      {
        ans.add(new ArrayList(asf));
        return;
      }

      for(int i=0; i<nums.length; i++)
      {
        if(asf.contains(nums[i]))
          continue;

        asf.add(nums[i]);
        
        print(ans, asf, nums);
        asf.remove(asf.size()-1);
      }
    }
}
