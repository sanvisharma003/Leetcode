Given an integer array nums where the elements are sorted in ascending order, convert it to a height-balanced binary search tree.
Example 1:
Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5] ; [0,-10,5,null,-3,null,9] is also accepted

CODE:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) 
    {
        int n=nums.length;
        return convert(nums,0,n-1);
    }

    public TreeNode convert(int[] nums, int st, int en)
    {
      if(st>en)
        return null;

      int mid= (st+en)/2;
      TreeNode nn= new TreeNode(nums[mid]);
      nn.left=convert(nums,st,mid-1);
      nn.right=convert(nums, mid+1,en);
      return nn;
    }
}
