Given an input string s, reverse the order of the words. A word is defined as a sequence of non-space characters. The words in s will be separated by at least one space. Return a string of the words in reverse order concatenated by a single space. Note that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.

Example 1:
Input: s = "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.

CODE:

class Solution 
{
    public String reverseWords(String s) 
    {
        Stack<String>st=new Stack<>();
        String temp="";
        
        for(int i=0;i<s.length(); i++)
        {
            if(s.charAt(i)==' ')
                continue;

            temp+=s.charAt(i);

            if(i==s.length()-1 || i<s.length()-1 && s.charAt(i+1)==' ')
            {
                st.push(temp);
                temp="";
            }
        }
        
        while(!st.isEmpty())
        {
            temp+=st.pop();

            if(!st.isEmpty())
                temp+=' ';
        }
        return temp;
    }
}
