Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements. Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

CODE 1:

class Solution 
{
    public void moveZeroes(int[] nums) 
    {
        if(nums.length <=1)
          return;

        int s=0, e=1;
        while(e<nums.length)
        {
          if(nums[s]==0 && nums[e]!=0)
          {
            int temp=nums[s];
            nums[s]=nums[e];
            nums[e]=temp;
            s++;
            e++;
          }
          else if(nums[s]==0 && nums[e]==0)
            e++;
          else
          {
            s++;
            e++;
          }
        } 
    }
}

CODE 2:

class Solution 
{
    public void moveZeroes(int[] nums) 
    {
        if(nums.length<=1)
            return;

        int z=0;
        for(int i=1; i<nums.length;i++)
        {
            if(nums[z]==0 && nums[i]!=0)
            {
                nums[z]=nums[i];
                nums[i]=0;
                z++;
            }
            else if(nums[z]!=0 && nums[i]!=0)
                z++;
            else if(nums[z]!=0 && nums[i]==0)
                z++;
        }
    }
}
