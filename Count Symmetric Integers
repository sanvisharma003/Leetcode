You are given two positive integers low and high. An integer x consisting of 2 * n digits is symmetric if the sum of the first n digits of x is equal to the sum of the last n digits of x. Numbers with an odd number of digits are never symmetric. Return the number of symmetric integers in the range [low, high].

Example 1:
Input: low = 1, high = 100
Output: 9
Explanation: There are 9 symmetric integers between 1 and 100: 11, 22, 33, 44, 55, 66, 77, 88, and 99.

CODE:

class Solution 
{
    public int countSymmetricIntegers(int low, int high) 
    {
        int ans=0;
            for(int i=low; i<=high; i++)
            {
                String temp= Integer.toString(i);
                
                if(temp.length() %2 !=0)
                    continue;
                
                int j=temp.length()-1;
                int st=0, en=0;

                for(int k=0; k<temp.length()/2; k++)
                {
                    st+=Integer.valueOf(temp.charAt(k));
                    en+=Integer.valueOf(temp.charAt(j));
                    j--;
                }

                if(st==en)
                    ans++;
            }
        return ans;
    }
}
