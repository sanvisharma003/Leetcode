You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times. Return the length of the longest substring containing the same letter you can get after performing the above operations.

Example 1:
Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.

CODE:

class Solution 
{
    public int characterReplacement(String s, int k) 
    {
        HashMap<Character, Integer> mp= new HashMap<>();
        int l=0, ans=0, max=0;

        for(int r=0; r<s.length(); r++)
        {
            mp.put(s.charAt(r), mp.getOrDefault(s.charAt(r),0)+1);
            
            int windsize=r-l+1;
            max=Math.max(max, mp.get(s.charAt(r)));;
            int non = windsize-max;

            if(non>k)
            {
                mp.put(s.charAt(l), mp.get(s.charAt(l))-1);
                l++;
            }
            ans= Math.max(ans, r-l+1);
        }
        return ans;
    }
}
