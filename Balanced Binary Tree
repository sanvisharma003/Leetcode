Given a binary tree, determine if it is height-balanced.

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: true

CODE:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public boolean isBalanced(TreeNode root) 
    {
        if(root==null)
          return true;
        
        int ans=height(root);

        if(ans==-1)
          return false;
        return true;
    }
    
    int height(TreeNode root)
    {
      if(root==null)
        return 0;
      
      int lh=height(root.left);
      if(lh==-1)
        return -1;

      int ri=height(root.right);
      if(ri==-1)
        return -1;

      if(Math.abs(lh-ri)>1)
        return -1;
      
      return 1+ Math.max(height(root.right),height(root.left));
    }
}
