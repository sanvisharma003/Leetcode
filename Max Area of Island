You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water. The area of an island is the number of cells with a value 1 in the island. Return the maximum area of an island in grid. If there is no island, return 0.

Example 1:
Input: grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],
               [0,0,0,0,0,0,0,1,1,1,0,0,0],
               [0,1,1,0,1,0,0,0,0,0,0,0,0],
               [0,1,0,0,1,1,0,0,1,0,1,0,0],
               [0,1,0,0,1,1,0,0,1,1,1,0,0],
               [0,0,0,0,0,0,0,0,0,0,1,0,0],
               [0,0,0,0,0,0,0,1,1,1,0,0,0],
               [0,0,0,0,0,0,0,1,1,0,0,0,0]]
Output: 6
Explanation: The answer is not 11, because the island must be connected 4-directionally.

CODE:

class Solution 
{
  int temp=0;

    public int maxAreaOfIsland(int[][] grid) 
    {
      int max=0;

      for(int i=0;i<grid.length;i++)
      {
        for(int j=0;j<grid[0].length;j++)
        {
          if(grid[i][j]==1)
          {
            area(grid,i,j);

            max=Math.max(max,temp);
            temp=0;
          }    
        }
      }
      return max;
    }

    void area(int[][]arr, int i, int j)
    {
      if(i<0 ||i==arr.length ||j<0 ||j==arr[0].length)
        return ;

      if(arr[i][j]==1)
      {
        arr[i][j]=0;
        temp+=1;

        area(arr,i+1,j);
        area(arr,i-1,j);
        area(arr,i,j+1);
        area(arr,i,j-1);
      }
    }
}
