Given the root of a binary tree, return the sum of all left leaves. A leaf is a node with no children. A left leaf is a leaf that is the left child of another node.

Example 1:
Input: root = [3,9,20,null,null,15,7]
Output: 24
Explanation: There are two left leaves in the binary tree, with values 9 and 15 respectively.

CODE:

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
  int sum=0;
    public int sumOfLeftLeaves(TreeNode root) 
    {
      if(root.right==null && root.left==null)
        return 0;

      cal(root.right, false);
      cal(root.left, true);
     
      return sum;   
    }

    void cal(TreeNode r, boolean lef)
    {
      if(r==null)
        return;

      if(r.left==null && r.right==null && lef==true)
        sum+=r.val;
      
      cal(r.left, true);
      cal(r.right, false);

    }
}
