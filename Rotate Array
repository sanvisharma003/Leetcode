Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

Example 1:
Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

CODE 1:

class Solution 
{
    public void rotate(int[] nums, int k) 
    {
        if(nums.length==1)
            return;

        ArrayList<Integer>temp=new ArrayList<>();
        k=k%nums.length;
        
        for(int i=(nums.length-k); i<nums.length; i++)
            temp.add(nums[i]);

        int j=nums.length-1;
        for(int i=j-k; i>=0; i--)
        {
            nums[j]=nums[i];
            j--;
        }

        for(int i=(temp.size()-1); i>=0; i--)
            nums[i]=temp.get(i);
    }
}

CODE 2:

class Solution
{
    public void rotate(int[] nums, int k) 
{
        int m=nums.length;
        k = k % m;
        int[] arr = new int[m];
        for (int i = m - k, j = 0; i < m; i++, j++) 
            arr[j] = nums[i];
        
        for (int i = 0, j = k; i < m - k; i++, j++) 
            arr[j] = nums[i];
        
        for (int i = 0; i < m; i++) 
            nums[i] = arr[i];
        
    }
}
