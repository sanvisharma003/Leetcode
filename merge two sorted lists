You are given the heads of two sorted linked lists list1 and list2. Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.Return the head of the merged linked list.

Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:
Input: list1 = [], list2 = []
Output: []

CODE 1:

class Solution 
{
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) 
    {
        if(list1==null)
            return list2;
        if(list2==null)
            return list1;

        ListNode p=null;
        ListNode head=null;

        while(list1!=null && list2!=null)
        {
            if(list1.val<=list2.val)
            {
                if(head==null)
                {
                    head=list1;
                    p=head;
                }
                else
                {
                    p.next=list1;
                    p=p.next;
                }
                list1=list1.next;
            }
            else
            {
                if(head==null)
                {
                    head=list2;
                    p=head;
                }
                else
                {
                    p.next=list2;
                    p=p.next;
                }
                list2=list2.next;
            }
        }
        while(list1!=null)
        {
            p.next=list1;
            p=p.next;
            list1=list1.next;
        }

        while(list2!=null)
        {
            p.next=list2;
            p=p.next;
            list2=list2.next;
        }
        return head;
    }
}

CODE 2:

class Solution 
{
  public ListNode mergeTwoLists(ListNode head1, ListNode head2) 
  {

    if (head1 == null) 
      return head2;
    else if (head2 == null) 
      return head1;


    ListNode mergedHead = null;
    if (head1.val <= head2.val) 
    {
      mergedHead = head1;
      head1 = head1.next;
    } 
    else 
    {
      mergedHead = head2;
      head2 = head2.next;
    }

    ListNode mergedTail = mergedHead;
  
    while (head1 != null && head2 != null) {
      ListNode temp = null;
      if (head1.val <= head2.val) {
        temp = head1;
        head1 = head1.next;
      } else {
        temp = head2;
        head2 = head2.next;
      }

      mergedTail.next = temp;
      mergedTail = temp;
    }

    if (head1 != null) {
      mergedTail.next = head1;
    } else if (head2 != null) {
      mergedTail.next = head2;
    }

    return mergedHead; 
  }
}
      
