You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively. Merge nums1 and nums2 into a single array sorted in non-decreasing order.The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

Example 1:
Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6]. The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.

CODE1:

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int i=0,j=0,k=0;
        int ans[]=new int[m+n];
        if(n==0)
        return;
      for( i=0;i<m;i++)
        ans[i]=nums1[i];
      for( i=m;i<m+n;i++)
      {
        ans[i]=nums2[j];
        j++;
      } 
      Arrays.sort(ans); 
        
        for( i=0;i<m+n;i++)
           nums1[i]=ans[i];
    }
}

CODE2:

class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        HashMap<Integer,Integer> map= new HashMap<>();
        for(int i=0;i<m;i++)
        {
          if(map.containsKey(nums1[i]))
            map.put(nums1[i], map.get(nums1[i])+1);
          else
            map.put(nums1[i], 1);
        }
        for(int i=0;i<n;i++)
        {
          if(map.containsKey(nums2[i]))
            map.put(nums2[i], map.get(nums2[i])+1);
          else
            map.put(nums2[i], 1);
        }
         int j=0;
        for(Map.Entry<Integer,Integer> e: map.entrySet())
        {
          if(e.getValue()>1)
          {
            int i=0;
            while(i!=e.getValue())
            {
               nums1[j]=e.getKey();
               j++;
               i++;
            }
          }
          else if(e.getValue()==1)
          {
             nums1[j]=e.getKey();
             j++;
          }
        }
        Arrays.sort(nums1);
    }
}
