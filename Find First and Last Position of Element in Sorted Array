Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value. If target is not found in the array, return [-1, -1]. You must write an algorithm with O(log n) runtime complexity.

Example 1:
Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

CODE:

class Solution 
{
    public int[] searchRange(int[] nums, int target) 
    {
        int[]ans=new int[2];
        int k=-1;

        for(int i=0; i<nums.length; i++)
        {
           if(nums[i]==target && k==-1)
            {
                ans[0]=i;
                k++;
            }

            if(nums[i]==target && k!=-1 )
                ans[1]=i;
        } 

        if(k==-1)
        {
            ans[0]=k;
            ans[1]=k;
        }
        
        return ans;
    }
}
