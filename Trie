import java.util.*;

public class trie 
{
    static class Node
    {
        Node[]child; //26 sized children
        boolean eow; //end of word

        public Node()
        {
            child=new Node[26];
            for(int i=0;i<26;i++)
                child[i]=null;

            eow=false;
        }
    }

    static Node root=new Node();

    public static void main(String args[])
    {
        String words[]={"the", "a", "there", "their", "any"};
            
        for(int i=0;i<words.length;i++)
            insert(words[i]);
        
        System.out.println(search("there"));
        System.out.println(search("thor"));
    }
    
    public static boolean search(String key)
    {
        Node curr=root;
        for(int i=0;i<key.length();i++)
        {
            int idx=key.charAt(i)-'a';

            if(curr.child[idx]==null)
                return false;
            
            if(i==key.length()-1 && curr.child[idx].eow==false)
                return false;

            curr=curr.child[idx];
            
        }
        return true;
    }

    public static void insert(String word)
    {
        Node curr=root;
        for(int i=0;i<word.length();i++)
        {
            int idx=word.charAt(i)-'a';

            if(curr.child[idx]==null)
                curr.child[idx]=new Node();

            if(i==word.length()-1)
                curr.child[idx].eow=true;

            curr=curr.child[idx];            
        }
    }
}
