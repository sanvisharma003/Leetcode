import java.util.Stack;
public class Solution 
{
    public static String infixToPostfix(String exp) 
    {
        String ans="";
        Stack<Character> st=new Stack<>();

        for(int i=0; i<exp.length(); i++)
        {
            if(Character.isLetterOrDigit(exp.charAt(i)))
                ans+=exp.charAt(i);

            else if(exp.charAt(i)=='(')
                st.push(exp.charAt(i));
            
            else if(exp.charAt(i)==')')
            {
                while(!st.isEmpty() && st.peek()!='(')
                    ans+=st.pop();

                st.pop();
            }

            else
            {
                while(!st.isEmpty() && prec(exp.charAt(i))<= prec(st.peek())) 
                    ans+=st.pop();

                st.push(exp.charAt(i));
            }
        }

        while(!st.isEmpty())
            ans+=st.pop();
            
        return ans;
    }

    static int prec(char ch)
    {
        switch (ch) 
        {
          case '+':
          case '-':
            return 1;
 
          case '*':
          case '/':
            return 2;
 
          case '^':
            return 3;
        }
        return -1;
    }
}
