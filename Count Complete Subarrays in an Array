You are given an array nums consisting of positive integers. We call a subarray of an array complete if the following condition is satisfied:
The number of distinct elements in the subarray is equal to the number of distinct elements in the whole array. Return the number of complete subarrays. A subarray is a contiguous non-empty part of an array.

Example 1:
Input: nums = [1,3,1,2,2]
Output: 4
Explanation: The complete subarrays are the following: [1,3,1,2], [1,3,1,2,2], [3,1,2] and [3,1,2,2].

CODE:

class Solution {
    public int countCompleteSubarrays(int[] nums) 
    {
        HashSet<Integer> set=new HashSet<>();

        for(int i=0; i<nums.length; i++)
            set.add(nums[i]);
        
        int n=set.size();
        set.clear();
        int ans=0;
        
        for(int i=0;i<nums.length;i++)
        {
            for(int j=i;j<nums.length;j++)
            {
                set.add(nums[j]);
                
                if(set.size()==n)
                    ans++;   
            }
            set.clear();
        }
        return ans;
    }
}
